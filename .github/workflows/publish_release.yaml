name: Publish Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'tag is going to be released'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Create tag
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag | xargs git tag -d
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Update main SDK
        run: |
          git config submodule.LiteLoaderSDK.branch main
          git submodule update --init --recursive --remote

      # - name: Get information from Version.h file (TODO)
      #   working-directory: ${{env.GITHUB_WORKSPACE}}
      #   id: ver
      #   run: |
      #     pwd

      - name: Download Server
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        shell: bash
        run: |
          mkdir -p SDK/tools/Server
          ServerLink=$(cat 'Scripts/LINK.txt')
          curl -L -o SDK/tools/Server/server.zip "$ServerLink"
          unzip SDK/tools/Server/server.zip -d SDK/tools/Server/ > /dev/null

      - name: Build Library
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        shell: cmd
        run: |
          cd SDK\tools
          LibraryBuilder.exe -o ..\lib Server

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: Copy dll and pdb files
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: bash
        run: |
          mkdir output/
          mkdir output/RELEASE/
          mkdir output/RELEASE/LiteLoader
          mkdir output/RELEASE/lib
          mkdir output/RELEASE/lib/managed
          cp -f x64/Release/Ijwhost.dll output/RELEASE/lib/Ijwhost.dll
          cp -f x64/Release/LLMoney.NET.dll output/RELEASE/lib/managed/LLMoney.NET.dll
          cp -f x64/Release/LiteLoader.NET.dll output/RELEASE/LiteLoader/LiteLoader.NET.dll
          cp -f x64/Release/LiteLoader.NET.runtimeconfig.json output/RELEASE/LiteLoader/LiteLoader.NET.runtimeconfig.json
          cp -f x64/Release/LLNETPreLoader.dll output/RELEASE/LiteLoader/LLNETPreLoader.dll
          mkdir output/PDB/
          cp -f x64/Release/*.pdb output/PDB/
          # mkdir output/${{env.PLUGIN_NAME}}/${{env.PLUGIN_NAME}}/
          # cp -r Data/* output/${{env.PLUGIN_NAME}}/${{env.PLUGIN_NAME}}/

      - name: Pack Release
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          Compress-Archive -Path output\RELEASE\* LiteLoader.NET.zip
          Compress-Archive -Path output\PDB\* PDB.zip

      - name: Prepare for creating Release
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        id: rel
        shell: bash
        run: |
            echo ::set-output name=tag::${{github.event.inputs.tag}}
            mv LiteLoader.NET.zip LiteLoader.NET-${{github.event.inputs.tag}}.zip
            mv PDB.zip PDB-${{github.event.inputs.tag}}.zip

      - name: Create New Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_REPOSITORY: ${{ env.GITHUB_ACTION_REPOSITORY }}
        with:
          prerelease: ${{ contains(github.ref, 'pre') }}
          tag: ${{ github.event.inputs.tag }}
          # bodyFile: ${{ github.workspace }}\CHANGELOG.md
          artifacts: |
            ${{ github.workspace }}\LiteLoader.NET-${{ steps.rel.outputs.tag }}.zip
            ${{ github.workspace }}\PDB-${{ steps.rel.outputs.tag }}.zip

      - name: Update LiteLoaderSDK.NET
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        env:
          REPO_KEY: ${{secrets.PUSH_TOKEN}}
          USERNAME: github-actions[bot]
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          cd Scripts
          ./UploadSDK.cmd action release
