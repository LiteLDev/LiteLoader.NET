name: Build

on:
  push:
    branches-ignore: main
    paths:
      - '**.cpp'
      - '**.cc'
      - '**.cxx'
      - '**.c'
      - '**.hpp'
      - '**.hh'
      - '**.hxx'
      - '**.h'
  pull_request:
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3.0.2
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: Update SDK
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        git config submodule.LiteLoaderSDK.branch main
        git submodule update --init --recursive --remote

    # - name: Get information from Version.h file (TODO)
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   id: ver
    #   run: |
    #     pwd
    #   shell: bash

    - name: Download Server
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir -p SDK/Tools/Server
        ServerLink=$(cat 'Scripts/LINK.txt')
        curl -L -o SDK/Tools/Server/server.zip "$ServerLink"
        unzip SDK/Tools/Server/server.zip -d SDK/Tools/Server/ > /dev/null
      shell: bash

    - name: Build Library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd SDK\Tools
        LibraryBuilder.exe -o ..\Lib Server
      shell: cmd

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: copy dll and pdb files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir output/
        mkdir output/RELEASE/
        mkdir output/RELEASE/LiteLoader
        mkdir output/RELEASE/lib
        mkdir output/RELEASE/lib/dotnet
        cp -f x64/Release/Ijwhost.dll output/RELEASE/lib/Ijwhost.dll
        cp -f x64/Release/LLMoney.NET.dll output/RELEASE/lib/dotnet/LLMoney.NET.dll
        cp -f x64/Release/LiteLoader.NET.dll output/RELEASE/LiteLoader/LiteLoader.NET.dll
        cp -f x64/Release/LiteLoader.NET.xml output/RELEASE/LiteLoader/LiteLoader.NET.xml
        cp -f x64/Release/LiteLoader.NET.runtimeconfig.json output/RELEASE/LiteLoader/LiteLoader.NET.runtimeconfig.json
        mkdir output/PDB/
        cp -f x64/Release/*.pdb output/PDB/
        # mkdir output/${{env.PLUGIN_NAME}}/${{env.PLUGIN_NAME}}/
        # cp -r Data/* output/${{env.PLUGIN_NAME}}/${{env.PLUGIN_NAME}}/
      shell: bash

    - name: Pack Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        Compress-Archive -Path output\RELEASE\* LiteLoader.NET.zip
        Compress-Archive -Path output\PDB\* PDB.zip

    - name: Prepare for creating Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      id: rel
      if: startsWith(github.ref, 'refs/tags/')
      run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/*}
          mv LiteLoader.NET.zip LiteLoader.NET-${GITHUB_REF#refs/tags/*}.zip
          mv PDB.zip PDB-${GITHUB_REF#refs/tags/*}.zip
      shell: bash

    - name: Upload Release
      uses: actions/upload-artifact@v3.1.0
      with:
        name: LiteLoader.NET-actions-${{ github.run_number }}
        path: ${{ github.workspace }}\output\RELEASE

    - name: Upload PDB
      uses: actions/upload-artifact@v3.1.0
      with:
        name: PDB-actions-${{ github.run_number }}
        path: ${{ github.workspace }}\output\PDB

    - name: Create New Release
      uses: softprops/action-gh-release@v0.1.14
      if: startsWith(github.ref, 'refs/tags/')
      with:
        # body_path: ${{ github.workspace }}\release-notes.txt
        files: |
          ${{ github.workspace }}\LiteLoader.NET-${{ steps.rel.outputs.tag }}.zip
          ${{ github.workspace }}\PDB-${{ steps.rel.outputs.tag }}.zip
        prerelease: contains(github.ref, 'pre')
      env:
        GITHUB_REPOSITORY: ${{env.GITHUB_ACTION_REPOSITORY}}

    - name: Update SDK
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        cd Scripts
        ./UploadSDK.cmd action
      env:
        REPO_KEY: ${{secrets.PUSH_TOKEN}}
        USERNAME: github-actions[bot]
      shell: cmd
